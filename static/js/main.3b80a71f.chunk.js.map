{"version":3,"sources":["hooks/useLocalStorageReducer.js","reducers/todo.reducer.js","contexts/todos.context.js","hooks/useToggleState.js","hooks/useInputState.js","components/EditTodoForm.js","components/Todo.js","components/TodoList.js","components/TodoListForm.js","components/TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorageReducer","key","defaultVal","reducer","_useReducer","useReducer","val","JSON","parse","window","localStorage","getItem","String","err","_useReducer2","Object","slicedToArray","state","dispatch","useEffect","setItem","stringify","action","type","concat","toConsumableArray","id","uuid","task","completed","filter","todo","map","objectSpread","newTask","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","_useLocalStorageReduc","todosReducer","_useLocalStorageReduc2","todos","react_default","a","createElement","Provider","value","children","useToggleState","initialVal","arguments","length","undefined","_useState","useState","_useState2","setState","useInputState","setValue","e","target","EditTodoForm","useContext","toggleEditForm","_useInputState","_useInputState2","handleChange","reset","react","onSubmit","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","memo","_useToggleState","_useToggleState2","isEditing","toggle","ListItem","height","components_EditTodoForm","Checkbox","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","Delete_default","Edit_default","TodoList","Paper","backgroundColor","elevation","List","i","Fragment","components_Todo","assign","Divider","TodoListForm","className","borderRadius","align","color","fontSize","background","ToDoApp","padding","Grid","container","justify","item","xs","sm","md","lg","components_TodoListForm","components_TodoList","App","TodoApp","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b80a71f.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\n\nconst useLocalStorageReducer = (key, defaultVal, reducer) => {\n  const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (err) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n\n  return [state, dispatch];\n};\n\nexport { useLocalStorageReducer };\n","import uuid from \"uuid/v4\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    // Add\n    case \"ADD\":\n      return [...state, { id: uuid(), task: action.task, completed: false }];\n    // Remove\n    case \"REMOVE\":\n      return state.filter(todo => todo.id !== action.id);\n    // Toggle\n    case \"TOGGLE\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    // Edit\n    case \"EDIT\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, task: action.newTask } : todo\n      );\n    // Default case\n    default:\n      return state;\n  }\n};\n\n// Export\nexport default reducer;\n","import React, { createContext } from \"react\";\nimport { useLocalStorageReducer } from \"../hooks/useLocalStorageReducer\";\nimport todosReducer from \"../reducers/todo.reducer\";\n\nconst defaultTodos = [\n  { id: 1, task: \"Get groceries\", completed: false },\n  { id: 2, task: \"Walk dog\", completed: true }\n];\n\nexport const TodosContext = createContext();\nexport const DispatchContext = createContext();\n\nexport function TodosProvider(props) {\n  // const todosStuff = useTodoState(defaultTodos);\n  const [todos, dispatch] = useLocalStorageReducer(\n    \"todos\",\n    defaultTodos,\n    todosReducer\n  );\n  return (\n    <TodosContext.Provider value={todos}>\n      <DispatchContext.Provider value={dispatch}>\n        {props.children}\n      </DispatchContext.Provider>\n    </TodosContext.Provider>\n  );\n}\n","import { useState } from \"react\";\n\nconst useToggleState = (initialVal = false) => {\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n  return [state, toggle];\n};\n\nexport default useToggleState;\n","import { useState } from \"react\";\n\nexport default initialVal => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\n","import React, { Fragment, useContext } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DispatchContext } from \"../contexts/todos.context\";\n\nconst EditTodoForm = props => {\n  const dispatch = useContext(DispatchContext);\n  const { id, task, toggleEditForm } = props;\n  const [value, handleChange, reset] = useInputState(task);\n  return (\n    <Fragment>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          // editTodo(id, value);\n          dispatch({ type: \"EDIT\", id: id, newTask: value });\n          reset();\n          toggleEditForm();\n        }}\n        style={{ marginLeft: \"1rem\", width: \"50%\" }}\n      >\n        <TextField\n          margin=\"normal\"\n          value={value}\n          onChange={handleChange}\n          fullWidth\n          autoFocus\n        />\n      </form>\n    </Fragment>\n  );\n};\n\nexport default EditTodoForm;\n","import React, { Fragment, useContext, memo } from \"react\";\nimport useToggleState from \"../hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { DispatchContext } from \"../contexts/todos.context\";\n\nconst Todo = props => {\n  const { task, completed, id } = props;\n  const dispatch = useContext(DispatchContext);\n  const [isEditing, toggle] = useToggleState(false);\n  return (\n    <ListItem style={{ height: \"64px\" }} key={id}>\n      {isEditing ? (\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\n      ) : (\n        <Fragment>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => dispatch({ type: \"TOGGLE\", id: id })}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={() => dispatch({ type: \"REMOVE\", id: id })}\n            >\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </Fragment>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(Todo);\n","import React, { useContext } from \"react\";\nimport Todo from \"./Todo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { TodosContext } from \"../contexts/todos.context\";\n\nconst TodoList = () => {\n  const todos = useContext(TodosContext);\n  if (todos.length)\n    return (\n      <Paper\n        style={{\n          backgroundColor: \"white\"\n        }}\n        elevation={12}\n        width={75}\n      >\n        <List style={{ backgroundColor: \"white\" }}>\n          {todos.map((todo, i) => (\n            <React.Fragment key={i}>\n              <Todo {...todo} key={todo.id} />\n              {i < todos.length - 1 && <Divider />}\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n    );\n  return null;\n};\n\nexport default TodoList;\n","import React, { useContext } from \"react\";\nimport useInputState from \"../hooks/useInputState\";\nimport { DispatchContext } from \"../contexts/todos.context\";\n\nconst TodoListForm = () => {\n  const [value, handleChange, reset] = useInputState(\"\");\n  const dispatch = useContext(DispatchContext);\n  return (\n    <div>\n      <div className=\"container mt-3\" id=\"searchContainer\">\n        <div\n          className=\"card m-4 z-depth-3 mx-auto animated slideInRight\"\n          style={{ borderRadius: \"30px\" }}\n        >\n          <div className=\"card-body pt-0 pb-0\">\n            <div className=\"md-form mt-2\">\n              <div align=\"center\">\n                <i\n                  className=\"fab fa-react mb-1 mx-auto\"\n                  style={{ color: \"lightblue\", fontSize: \"50px\" }}\n                />\n              </div>\n              <form\n                onSubmit={e => {\n                  e.preventDefault();\n                  dispatch({ type: \"ADD\", task: value });\n                  reset();\n                }}\n              >\n                <div align=\"center\">\n                  <input\n                    type=\"text\"\n                    id=\"form1\"\n                    className=\"form-control  w-75\"\n                    onChange={handleChange}\n                    value={value}\n                  />\n                </div>\n                <div align=\"center\" className=\"mt-3\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-md text-white\"\n                    style={{\n                      borderRadius: \"12px\",\n                      background: \"rgba(51, 210, 162, 0.8)\"\n                    }}\n                  >\n                    Add task\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoListForm;\n","import React from \"react\";\nimport { TodosProvider } from \"../contexts/todos.context\";\nimport TodoList from \"./TodoList\";\nimport TodoListForm from \"./TodoListForm\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ToDoApp = () => {\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\"\n      }}\n    >\n      <Grid container justify=\"center\">\n        <Grid item xs={10} sm={8} md={6} lg={6}>\n          <TodosProvider>\n            <TodoListForm />\n            <TodoList />\n          </TodosProvider>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default ToDoApp;\n","import React from \"react\";\nimport ToDoApp from \"./components/TodoApp\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <ToDoApp />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}